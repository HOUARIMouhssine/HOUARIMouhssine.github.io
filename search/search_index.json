{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"dns/","text":"Welcome to MkDocs::DNS Pour toute la documentation, rendre visite \u00e0 mkdocs.org . Explication fichier /etc/named.conf options { listen-on port 53 { 127.0.0.1 ; 192.168.0.1; }; directory \"/var/named\"; pid-file \"/run/named/named.pid\"; dump-file \"/var/named/data/cache_dump.db\"; statistics-file \"/var/named/data/named_stats.txt\"; memstatistics-file \"/var/named/data/named_mem_stats.txt\"; //allow-query { localnets ; }; allow-query { any; }; forwarders { 8.8.8.8 ; 8.8.4.4 ; }; }; zone \"ahouari\" { type master; file \"/var/named/ahouari.db\"; }; zone \"0.168.192.in-addr.arpa\" { type master; file \"/var/named/0.168.192.db\"; }; listen-on port 53 : cela, veut dire que notre serveur de bind \u00e9coute en localhost et sur l'adresse 192.168.0.1 sur le port 53 dump-file : Ce fichier, explique l'emplacement dont le DNS serveur va stocker le cache de son contenue statistics-file : Ce fichier, repr\u00e9sente les informations statistiques stocker par le serveur bind pour ses op\u00e9rations memstatistics-file : Repr\u00e9sente les informations statistiques reli\u00e9 \u00e0 la m\u00e9moire (RAM) allow-query : repr\u00e9sente une/plusieurs adresses IP qui ont le droit pour lancer des requetes pour ce DNS serveur zone \"ahouari\" : cr\u00e9ation d'une zone nomm\u00e9e ahouari et que zone est master et son fichier est dans /var/named/ahouari.db zone \"0.168.192.in-addr.arpa\" : Cette partie est la zone reverse PTR de la zone ahouari pour l'adresse r\u00e9seau 192.168.0.0, c'est indiqu\u00e9 que cette zone est la zone reverse de la zone master ahouari et son fichier de configuration est localis\u00e9 sur /var/named/0.168.192.in-addr-arpa Cette configuration d\u00e9finit la partie zone DNS sur un r\u00e9seau qui \u00e9coute dans le port 53 TCP/UDP, ce serveur autorise les queries DNS depuis n'importe quel serveur et il les forwardes vers les DNS de google les autres machines dans le r\u00e9seau peuvent sp\u00e9cifier l'adresse ip de ce dns serveur afin de faire des requ\u00eates DNS Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"DNS"},{"location":"dns/#welcome-to-mkdocsdns","text":"Pour toute la documentation, rendre visite \u00e0 mkdocs.org .","title":"Welcome to MkDocs::DNS"},{"location":"dns/#explication-fichier-etcnamedconf","text":"options { listen-on port 53 { 127.0.0.1 ; 192.168.0.1; }; directory \"/var/named\"; pid-file \"/run/named/named.pid\"; dump-file \"/var/named/data/cache_dump.db\"; statistics-file \"/var/named/data/named_stats.txt\"; memstatistics-file \"/var/named/data/named_mem_stats.txt\"; //allow-query { localnets ; }; allow-query { any; }; forwarders { 8.8.8.8 ; 8.8.4.4 ; }; }; zone \"ahouari\" { type master; file \"/var/named/ahouari.db\"; }; zone \"0.168.192.in-addr.arpa\" { type master; file \"/var/named/0.168.192.db\"; }; listen-on port 53 : cela, veut dire que notre serveur de bind \u00e9coute en localhost et sur l'adresse 192.168.0.1 sur le port 53 dump-file : Ce fichier, explique l'emplacement dont le DNS serveur va stocker le cache de son contenue statistics-file : Ce fichier, repr\u00e9sente les informations statistiques stocker par le serveur bind pour ses op\u00e9rations memstatistics-file : Repr\u00e9sente les informations statistiques reli\u00e9 \u00e0 la m\u00e9moire (RAM) allow-query : repr\u00e9sente une/plusieurs adresses IP qui ont le droit pour lancer des requetes pour ce DNS serveur zone \"ahouari\" : cr\u00e9ation d'une zone nomm\u00e9e ahouari et que zone est master et son fichier est dans /var/named/ahouari.db zone \"0.168.192.in-addr.arpa\" : Cette partie est la zone reverse PTR de la zone ahouari pour l'adresse r\u00e9seau 192.168.0.0, c'est indiqu\u00e9 que cette zone est la zone reverse de la zone master ahouari et son fichier de configuration est localis\u00e9 sur /var/named/0.168.192.in-addr-arpa Cette configuration d\u00e9finit la partie zone DNS sur un r\u00e9seau qui \u00e9coute dans le port 53 TCP/UDP, ce serveur autorise les queries DNS depuis n'importe quel serveur et il les forwardes vers les DNS de google les autres machines dans le r\u00e9seau peuvent sp\u00e9cifier l'adresse ip de ce dns serveur afin de faire des requ\u00eates DNS","title":"Explication fichier /etc/named.conf"},{"location":"dns/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"dns/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"doc/","text":"Welcome to MkDocs::Documentation Pour toute la documentation, rendre visite \u00e0 mkdocs.org . Source de l'environnement source /data/python/bin/activate Entrer dans le r\u00e9pertoire cd /data/Documentation git init git add . mkdocs gh-deploy -r https://github.com/HOUARIMouhssine/ahouari.github.io -b main","title":"Documentation"},{"location":"doc/#welcome-to-mkdocsdocumentation","text":"Pour toute la documentation, rendre visite \u00e0 mkdocs.org .","title":"Welcome to MkDocs::Documentation"},{"location":"doc/#source-de-lenvironnement","text":"source /data/python/bin/activate","title":"Source de l'environnement"},{"location":"doc/#entrer-dans-le-repertoire","text":"cd /data/Documentation git init git add . mkdocs gh-deploy -r https://github.com/HOUARIMouhssine/ahouari.github.io -b main","title":"Entrer dans le r\u00e9pertoire"},{"location":"vbox/","text":"Welcome to MkDocs::VboxManage Pour toute la documentation, rendre visite \u00e0 mkdocs.org . VboxManage est la partie CLI pour Oracle VM virtualbox, il permet de cr\u00e9e des interfaces r\u00e9seaux, de les configurer, d\u00e9marrer ou l'arreter Dans notre example, il sera utiliser pour cr\u00e9er une interface r\u00e9seau sur le r\u00e9seau local dont lequel on va \u00e9couter Cr\u00e9ation une inteface VBoxManage hostonlyif ipconfig vboxnet0 --ip=192.168.0.1 --netmask=255.255.252.0 Cette inteface fait partie de la zone dns ahouari Configuration de Haproxy frontend http bind 5.196.93.233:80 use_backend %[req.hdr(Host),lower] frontend https bind 5.196.93.233:443 #ssl crt /etc/haproxy/cert/server.pem mode http option httplog use_backend %[req.hdr(Host),lower] Pour la partie backend (example: virtualbox) backend virtualbox.5.196.93.233.nip.io balance roundrobin server server_virtualbox_1 5.196.93.233:8080 check http Frontend : cela, veut dire que notre serveur \u00e9coute toujour sur l'IP 5.196.93.233 dans le port 80 use_backend %[req.hdr(Host),lower] : Cette partie explique qu'on \u00e9coute de chaque backend en basant sur son host header qui est case-insensitive et qui fait partie dans le dossier conf.d mode http : on \u00e9coute tous le traffic http sur SSL ( pas mode tcp) option httplog : cela veut dire qu'on active le mode log pour la partie http Si on avait un fichier pem, dans ce cas l\u00e0 , on va utiliser le trafic http over SSL pour chiffrer le traffic en mode loadbalancing * backend virtualbox.5.196.93.233.nip.io : le nom du backend utiliser, il revient vers un nom de nip.io qui est un DNS public donc la format est : nom.IP.nip.ip , le nom de ce backend est server_virtualbox_1 , ce backend va \u00e9couter sur le port 8080 avec l'IP public ( Image docker d\u00e8j\u00e0 cr\u00e9er) et configurer Docker-compose file version: \"3.5\" services: vbox_http: container_name: vbox_http image: joweisberg/phpvirtualbox restart: always ports: - 8080:80 environment: TZ=\"Europe/Paris\" SRV1_HOSTPORT=\"5.196.93.233:18083\" SRV1_NAME=\"Server1\" SRV1_USER=\"root\" SRV1_PW=\"*****\" CONF_browserRestrictFolders=\"/home,/usr/lib/virtualbox,\" CONF_noAuth=\"true\" Pour installer cette image de docker , il faut lancer la commande: docker-compose -f /data/docker-compose/phpvbox.yaml up -d Pour supprimer l'image docker docker-compose -f /data/docker-compose/phpvbox.yaml down","title":"Virtualbox"},{"location":"vbox/#welcome-to-mkdocsvboxmanage","text":"Pour toute la documentation, rendre visite \u00e0 mkdocs.org . VboxManage est la partie CLI pour Oracle VM virtualbox, il permet de cr\u00e9e des interfaces r\u00e9seaux, de les configurer, d\u00e9marrer ou l'arreter Dans notre example, il sera utiliser pour cr\u00e9er une interface r\u00e9seau sur le r\u00e9seau local dont lequel on va \u00e9couter","title":"Welcome to MkDocs::VboxManage"},{"location":"vbox/#creation-une-inteface","text":"VBoxManage hostonlyif ipconfig vboxnet0 --ip=192.168.0.1 --netmask=255.255.252.0 Cette inteface fait partie de la zone dns ahouari","title":"Cr\u00e9ation une inteface"},{"location":"vbox/#configuration-de-haproxy","text":"frontend http bind 5.196.93.233:80 use_backend %[req.hdr(Host),lower] frontend https bind 5.196.93.233:443 #ssl crt /etc/haproxy/cert/server.pem mode http option httplog use_backend %[req.hdr(Host),lower] Pour la partie backend (example: virtualbox) backend virtualbox.5.196.93.233.nip.io balance roundrobin server server_virtualbox_1 5.196.93.233:8080 check http Frontend : cela, veut dire que notre serveur \u00e9coute toujour sur l'IP 5.196.93.233 dans le port 80 use_backend %[req.hdr(Host),lower] : Cette partie explique qu'on \u00e9coute de chaque backend en basant sur son host header qui est case-insensitive et qui fait partie dans le dossier conf.d mode http : on \u00e9coute tous le traffic http sur SSL ( pas mode tcp) option httplog : cela veut dire qu'on active le mode log pour la partie http Si on avait un fichier pem, dans ce cas l\u00e0 , on va utiliser le trafic http over SSL pour chiffrer le traffic en mode loadbalancing * backend virtualbox.5.196.93.233.nip.io : le nom du backend utiliser, il revient vers un nom de nip.io qui est un DNS public donc la format est : nom.IP.nip.ip , le nom de ce backend est server_virtualbox_1 , ce backend va \u00e9couter sur le port 8080 avec l'IP public ( Image docker d\u00e8j\u00e0 cr\u00e9er) et configurer","title":"Configuration de Haproxy"},{"location":"vbox/#docker-compose-file","text":"version: \"3.5\" services: vbox_http: container_name: vbox_http image: joweisberg/phpvirtualbox restart: always ports: - 8080:80 environment: TZ=\"Europe/Paris\" SRV1_HOSTPORT=\"5.196.93.233:18083\" SRV1_NAME=\"Server1\" SRV1_USER=\"root\" SRV1_PW=\"*****\" CONF_browserRestrictFolders=\"/home,/usr/lib/virtualbox,\" CONF_noAuth=\"true\" Pour installer cette image de docker , il faut lancer la commande: docker-compose -f /data/docker-compose/phpvbox.yaml up -d Pour supprimer l'image docker docker-compose -f /data/docker-compose/phpvbox.yaml down","title":"Docker-compose file"}]}